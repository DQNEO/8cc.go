GO_OBJS=main.go header.go lex.go adapter.go util.go gen.go parse.go string.go list.go dict.go cpp.go debug.go
TESTS := $(patsubst %.c,%.bin,$(wildcard test/*.c))
CFLAGS=-Wall -std=gnu99 -g -I. -no-pie

8ccg: $(GO_OBJS)
	GOOS=linux  GOARCH=amd64 go build -o 8ccg $(GO_OBJS)

clean:
	rm -f 8gg.* 8cc
	make clean

fmt:
	gofmt -w *.go

test: 8ccg $(TESTS) test.sh sample/nqueen
	@echo
	@for test in $(TESTS); do \
	    ./$$test;             \
	done
	cp 8ccg 8cc
	./test.sh

test/%.s: test/%.c 8ccg
	./8ccg < $< > $@

test/%.bin: test/%.s test/util/util.o 8ccg
	@$(CC) $(CFLAGS) -o $@ $< test/util/util.o

sample/nqueen: 8ccg sample/nqueen.c
	./8ccg < sample/nqueen.c > sample/nqueen.s
	$(CC) $(CFLAGS) -o sample/nqueen sample/nqueen.s
